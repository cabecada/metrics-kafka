subprojects {
    apply plugin:'java'

    repositories {
        mavenCentral()
        maven {
            url = 'http://clojars.org/repo'
        }
    }
}

project (':metrics') {
    test {
        doFirst {
            file('target').mkdirs();
        }

        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat = 'full'
        }

        doLast {
            file('target').delete();
        }
    }

    dependencies {
        compile 'org.apache.kafka:kafka_2.10:0.8.1'
        compile 'org.slf4j:slf4j-log4j12:1.7.7'
        compile 'com.codahale.metrics:metrics-core:3.0.1'
        compile 'com.codahale.metrics:metrics-json:3.0.1'

        testCompile 'junit:junit:4.11'
        testCompile 'org.jbehave.site:jbehave-site-resources:3.1.1'
        testCompile 'de.codecentric:jbehave-junit-runner:1.0.1'
        testCompile 'org.jbehave:jbehave-core:3.8'
    }
}

project (':riemann') {
    apply plugin:'scala'

    task specs(type: JavaExec, dependsOn: testClasses) {
        main = 'org.specs2.files'
        args = ['console']
        classpath sourceSets.main.runtimeClasspath
        classpath sourceSets.test.runtimeClasspath
        classpath configurations.testRuntime
        classpath configurations.runtime
    }

    test.dependsOn specs
    test.dependsOn ":psutil:test"

    dependencies {
        compile project(':metrics')
        compile 'org.scala-lang:scala-library:2.10.3'
        compile 'net.benmur:riemann-scala-client_2.10:0.3.1'

        testCompile 'org.specs2:specs2_2.10:2.2.2'
    }
}

project (':psutil') {
    task runPython(type:Exec) {
        workingDir '/'
        commandLine 'usr/bin/python', "$rootDir/psutil/src/main/python/psutil_producer_test.py"
    }

    test.dependsOn runPython
}
